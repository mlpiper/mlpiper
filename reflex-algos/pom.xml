<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <artifactId>reflex-algos</artifactId>
    <name>reflex-algos</name>
    <groupId>com.parallelmachines</groupId>
    <version>1.4.0</version>

    <packaging>jar</packaging>

    <properties>
        <jackson.version>2.6.5</jackson.version>
        <shaded.prefix>com.parallelmachines.shaded</shaded.prefix>
        <scala.binary.version>2.11</scala.binary.version>
        <reflexVersion>1.4.0</reflexVersion>
    </properties>

    <dependencies>
        <dependency>
            <groupId>net.sourceforge.argparse4j</groupId>
            <artifactId>argparse4j</artifactId>
            <version>0.7.0</version>
        </dependency>

        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>2.2.5</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>20.0</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>retrofit</artifactId>
            <version>2.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okio</groupId>
            <artifactId>okio</artifactId>
            <version>1.11.0</version>
        </dependency>
        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-jackson_2.11</artifactId>
            <version>3.2.11</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_2.11</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.3</version>
        </dependency>

        <dependency>
            <groupId>com.github.scopt</groupId>
            <artifactId>scopt_${scala.binary.version}</artifactId>
            <version>3.5.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Spark dependencies -->

        <dependency>
            <groupId>com.twitter</groupId>
            <artifactId>bijection-protobuf_2.11</artifactId>
            <version>0.9.5</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.netty/netty-all -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.12.Final</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/net.snowflake/spark-snowflake -->
        <dependency>
            <groupId>net.snowflake</groupId>
            <artifactId>spark-snowflake_2.11</artifactId>
            <version>2.4.3-spark_2.2</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3 -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>1.11.242</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.3</version>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>net.jpountz.lz4</groupId>
            <artifactId>lz4</artifactId>
            <version>1.3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.16.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.11</artifactId>
            <version>3.0.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalanlp</groupId>
            <artifactId>breeze_${scala.binary.version}</artifactId>
            <version>0.12</version>
        </dependency>

        <!-- Commenting it out for scala 2.11. Please refer https://mvnrepository.com/artifact/org.scalanlp
            <dependency>
                <groupId>org.scalanlp</groupId>
                <artifactId>breeze-core_${scala.binary.version}</artifactId>
                <version>0.4</version>
            </dependency>
        -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.11</artifactId>
            <version>0.9.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>0.9.0.1</version>
        </dependency>

        <dependency>
            <groupId>com.parallelmachines.reflex.common</groupId>
            <artifactId>reflex-common</artifactId>
            <version>${reflexVersion}</version>
        </dependency>

        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.3.1</version>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>spark-2.2</id>
            <activation>
                <property>
                    <name>buildSpark2.2</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-mllib_2.11</artifactId>
                    <version>2.2.0</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-core_2.11</artifactId>
                    <version>2.2.0</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.apache.hadoop</groupId>
                            <artifactId>hadoop-client</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-client</artifactId>
                    <version>2.7.3</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>spark-2.1.1</id>
            <activation>
                <property>
                    <name>!buildSpark2.2</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-core_2.11</artifactId>
                    <version>2.1.1</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-mllib_2.11</artifactId>
                    <version>2.1.1</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>production</id>
            <activation>
                <property>
                    <name>!skipProduction</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Scala Code Style -->
                    <plugin>
                        <groupId>org.scalastyle</groupId>
                        <artifactId>scalastyle-maven-plugin</artifactId>
                        <version>1.0.0</version>
                        <configuration>
                            <!-- Temporarily disable scala code style check -->
                            <skip>true</skip>
                            <configLocation>${project.basedir}/tools/maven/scalastyle-config.xml
                            </configLocation>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>3.1.0</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>src/main/python/mlops/parallelm</directory>
                                    <includes>
                                        <include>**/protobuf</include>
                                    </includes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>


                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>fat-jar-ReflexAlgos</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <shadeTestJar>false</shadeTestJar>
                                    <shadedArtifactAttached>false</shadedArtifactAttached>
                                    <createDependencyReducedPom>false</createDependencyReducedPom>
                                    <relocations>
                                        <relocation>
                                            <pattern>io.netty</pattern>
                                            <shadedPattern>${shaded.prefix}.io.netty</shadedPattern>
                                        </relocation>
                                        <relocation>
                                            <pattern>org.json4s</pattern>
                                            <shadedPattern>${shaded.prefix}.org.json4s</shadedPattern>
                                        </relocation>
                                        <relocation>
                                            <pattern>com.google.protobuf</pattern>
                                            <shadedPattern>${shaded.prefix}.org.google.protobuf</shadedPattern>
                                        </relocation>
                                        <relocation>
                                            <pattern>org.apache.http</pattern>
                                            <shadedPattern>${shaded.prefix}.org.apache.http</shadedPattern>
                                        </relocation>
                                    </relocations>
                                    <transformers>
                                        <transformer
                                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                            <mainClass>org.mlpiper.infrastructure.DagGen</mainClass>
                                        </transformer>
                                    </transformers>
                                    <finalName>ReflexAlgos-jar-with-dependencies</finalName>
                                    <filters>
                                        <filter>
                                            <artifact>*:*</artifact>
                                            <excludes>
                                                <exclude>META-INF/*.SF</exclude>
                                                <exclude>META-INF/*.DSA</exclude>
                                                <exclude>META-INF/*.RSA</exclude>
                                            </excludes>
                                        </filter>
                                    </filters>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>

                    <!-- Generating the python mlops package -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>

                        <executions>
                            <execution>
                                <id>package-py2_py3-mlops-eggs</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.basedir}/src/main/python/mlops</workingDirectory>
                                    <executable>make</executable>
                                    <commandlineArgs>install_to MLOPSDISTDIR=${project.build.directory}
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>mlops-python-tests</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.basedir}/src/main/python/mlops</workingDirectory>
                                    <environmentVariables>
                                        <PYTHONPATH>./:$PYTHONPATH</PYTHONPATH>
                                    </environmentVariables>
                                    <executable>make</executable>
                                    <commandlineArgs>test</commandlineArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docs-python-mlops</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.basedir}/src/main/python/mlops</workingDirectory>
                                    <executable>env</executable>
                                    <commandlineArgs>PYTHONPATH=./ sphinx-build -b html doc-src
                                        ${project.build.directory}/docs/mlops
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>package-py2_py3-mlcomp-eggs</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.basedir}/src/main/python/mlcomp</workingDirectory>
                                    <executable>make</executable>
                                    <commandlineArgs>install_to MLCOMPDISTDIR=${project.build.directory}
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>package-py2_py3-deputy-eggs</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.basedir}/../deputy</workingDirectory>
                                    <executable>make</executable>
                                    <commandlineArgs>install_to DISTDIR=${project.build.directory}
                                    </commandlineArgs>
                                </configuration>
                            </execution>


                            <execution>
                                <id>component-json-generation</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.basedir}/target</workingDirectory>
                                    <executable>java</executable>
                                    <commandlineArgs>-jar ReflexAlgos-jar-with-dependencies.jar --external-comp
                                        ${project.basedir}/components --comp-desc ${project.basedir}/target/comps.json
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <profile>
            <id>compiler</id>
            <activation>
                <property>
                    <name>!skipCompiler</name>
                </property>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.20</version>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <source>1.8</source>
                            <target>1.8</target>
                        </configuration>
                    </plugin>

                    <!-- Scala Compiler -->
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>scala-maven-plugin</artifactId>
                        <version>3.1.4</version>
                        <executions>
                            <!-- Run scala compiler in the process-resources phase, so that dependencies on
                                scala classes can be resolved later in the (Java) compile phase -->
                            <execution>
                                <id>scala-compile-first</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                            </execution>

                            <!-- Run scala compiler in the process-test-resources phase, so that dependencies on
                                 scala classes can be resolved later in the (Java) test-compile phase -->
                            <execution>
                                <id>scala-test-compile</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <jvmArgs>
                                <jvmArg>-Xms128m</jvmArg>
                                <jvmArg>-Xmx512m</jvmArg>
                            </jvmArgs>
                            <args>
                                <arg>-deprecation</arg>
                                <arg>-feature</arg>
                            </args>
                        </configuration>
                    </plugin>

                    <!-- Adding scala source directories to build path -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <!-- Add src/main/scala to eclipse build path -->
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/main/scala</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <!-- Add src/test/scala to eclipse build path -->
                            <execution>
                                <id>add-test-source</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/test/scala</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
