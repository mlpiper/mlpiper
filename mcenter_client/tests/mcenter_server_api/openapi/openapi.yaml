openapi: 3.0.1
info:
  description: MLOPs API document
  title: MLOps API documentation
  version: 1.0.0
servers:
- url: http://bran-c13:3456/v2
- url: https://bran-c13:3456/v2


tags:
- description: Agent management
  name: agents
- description: Events management
  name: events
- description: Group management
  name: groups
- description: ION management
  name: MLApp patterns
- description: MLApp profile management
  name: MLApp profiles
- description: Models management
  name: models
- description: Pipeline patterns management
  name: pipeline patterns
- description: Pipeline profiles management
  name: pipeline profiles
- description: View management
  name: reports
- description: Repository management
  name: repository
- description: Role management
  name: roles
- description: Timeline capture management
  name: timeline captures
- description: User management
  name: users
paths:
  /agents:
    get:
      operationId: agents_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Agent'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error.
      summary: Get list of agents
      tags:
      - agents
      x-openapi-router-controller: mcenter_server_api.controllers.agents_controller
    post:
      operationId: agents_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agent'
        description: Agent address object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        500:
          content: {}
          description: Internal Server error.
      summary: Register an agent
      tags:
      - agents
      x-openapi-router-controller: mcenter_server_api.controllers.agents_controller
  /agents/{agentId}:
    delete:
      operationId: agents_agent_id_delete
      parameters:
      - description: Agent identifier
        in: path
        name: agentId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Deregister an agent
      tags:
      - agents
      x-openapi-router-controller: mcenter_server_api.controllers.agents_controller
    get:
      operationId: agents_agent_id_get
      parameters:
      - description: Agent identifier
        in: path
        name: agentId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: List details of specific agent
      tags:
      - agents
      x-openapi-router-controller: mcenter_server_api.controllers.agents_controller
    put:
      operationId: agents_agent_id_put
      parameters:
      - description: Agent identifier
        in: path
        name: agentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agent'
        description: Update agent object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Update agent information
      tags:
      - agents
      x-openapi-router-controller: mcenter_server_api.controllers.agents_controller
  /alerts:
    get:
      operationId: alerts_get
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Get list of alerts
      tags:
      - events
      x-openapi-router-controller: mcenter_server_api.controllers.events_controller
  /auth/login:
    post:
      operationId: auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: username and password fields for authentication
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: OK
        500:
          content: {}
          description: Internal Server error.
      summary: Authenticate user
      tags:
      - users
      x-openapi-router-controller: mcenter_server_api.controllers.users_controller
  /auth/validate:
    post:
      operationId: auth_validate_post
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Register an user
      tags:
      - users
      x-openapi-router-controller: mcenter_server_api.controllers.users_controller
  /dashboard:
    get:
      operationId: dashboard_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Dashboard'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Extract dashboard view
      tags:
      - reports
      x-openapi-router-controller: mcenter_server_api.controllers.reports_controller
  /dataScienceReport:
    get:
      operationId: data_science_report_get
      parameters:
      - description: MLApp instance identifier
        in: path
        name: mlAppInstanceId
        required: true
        schema:
          type: string
      - description: workflow node id for which to fetch view
        in: query
        name: workflowNodeId
        schema:
          type: string
      - description: agent identifier
        in: query
        name: agentId
        schema:
          type: string
      - description: Pipeline identifier
        in: query
        name: pipelineId
        schema:
          type: string
      - description: start time from where to fetch health view
        in: query
        name: start
        schema:
          format: int64
          type: integer
      - description: end time from where to fetch health view
        in: query
        name: end
        schema:
          format: int64
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataView'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Extract data scientist view
      tags:
      - reports
      x-openapi-router-controller: mcenter_server_api.controllers.reports_controller
  /dbQuery:
    get:
      operationId: db_query_get
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /events:
    get:
      operationId: events_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Event'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Get list of events
      tags:
      - events
      x-openapi-router-controller: mcenter_server_api.controllers.events_controller
  /healthReport:
    get:
      operationId: health_report_get
      parameters:
      - description: MLApp instance identifier
        in: path
        name: mlAppInstanceId
        required: true
        schema:
          type: string
      - description: start time from where to fetch health view
        in: query
        name: start
        schema:
          format: int64
          type: integer
      - description: end time from where to fetch health view
        in: query
        name: end
        schema:
          format: int64
          type: integer
      - description: Pipeline instance identifier, of first node to compare
        in: query
        name: pipelineInstanceA
        schema:
          type: string
      - description: Pipeline instance identifier, of second node to compare
        in: query
        name: pipelineInstanceB
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthView'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Extract health view
      tags:
      - reports
      x-openapi-router-controller: mcenter_server_api.controllers.reports_controller
  /me:
    get:
      operationId: me_get
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Get user detail of current user
      tags:
      - users
      x-openapi-router-controller: mcenter_server_api.controllers.users_controller
  /mlAppInstances:
    get:
      operationId: ml_app_instances_get
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
    post:
      operationId: ml_app_instances_post
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /mlAppInstances/{mlAppInstanceId}:
    get:
      operationId: ml_app_instances_ml_app_instance_id_get
      parameters:
      - description: MLApp instance identifier
        in: path
        name: mlAppInstanceId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /mlAppInstances/{mlAppInstanceId}/archive:
    delete:
      operationId: ml_app_instances_ml_app_instance_id_archive_delete
      parameters:
      - description: MLApp instance identifier
        in: path
        name: mlAppInstanceId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /mlAppInstances/{mlAppInstanceId}/logs:
    get:
      operationId: ml_app_instances_ml_app_instance_id_logs_get
      parameters:
      - description: MLApp instance identifier
        in: path
        name: mlAppInstanceId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /mlAppInstances/{mlAppInstanceId}/logs/download:
    get:
      operationId: ml_app_instances_ml_app_instance_id_logs_download_get
      parameters:
      - description: MLApp instance identifier
        in: path
        name: mlAppInstanceId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Model file
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Download specific model
      tags:
      - models
      x-openapi-router-controller: mcenter_server_api.controllers.models_controller
  /mlAppInstances/{mlAppInstanceId}/logs/prepare:
    post:
      operationId: ml_app_instances_ml_app_instance_id_logs_prepare_post
      parameters:
      - description: MLApp instance identifier
        in: path
        name: mlAppInstanceId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /mlAppInstances/{mlAppInstanceId}/logs/prepareStatus:
    post:
      operationId: ml_app_instances_ml_app_instance_id_logs_prepare_status_post
      parameters:
      - description: MLApp instance identifier
        in: path
        name: mlAppInstanceId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /mlAppInstances/{mlAppInstanceId}/moveToProduction:
    post:
      operationId: ml_app_instances_ml_app_instance_id_move_to_production_post
      parameters:
      - description: MLApp instance identifier
        in: path
        name: mlAppInstanceId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /mlAppInstances/{mlAppInstanceId}/setModel:
    post:
      operationId: ml_app_instances_ml_app_instance_id_set_model_post
      parameters:
      - description: MLApp instance identifier
        in: path
        name: mlAppInstanceId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /mlAppInstances/{mlAppInstanceId}/stop:
    delete:
      operationId: ml_app_instances_ml_app_instance_id_stop_delete
      parameters:
      - description: MLApp instance identifier
        in: path
        name: mlAppInstanceId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /mlAppInstances/{mlAppInstanceId}/thresholds:
    get:
      operationId: ml_app_instances_ml_app_instance_id_thresholds_get
      parameters:
      - description: MLApp instance identifier
        in: path
        name: mlAppInstanceId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
    post:
      operationId: ml_app_instances_ml_app_instance_id_thresholds_post
      parameters:
      - description: MLApp instance identifier
        in: path
        name: mlAppInstanceId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /models:
    get:
      operationId: models_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Get metadata of models
      tags:
      - models
      x-openapi-router-controller: mcenter_server_api.controllers.models_controller
    post:
      operationId: models_post
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: OK
        500:
          content: {}
          description: Internal Server error.
      summary: Upload a model
      tags:
      - models
      x-openapi-router-controller: mcenter_server_api.controllers.models_controller
  /models/{modelId}:
    delete:
      operationId: models_model_id_delete
      parameters:
      - description: Model identifier
        in: path
        name: modelId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Delete a model
      tags:
      - models
      x-openapi-router-controller: mcenter_server_api.controllers.models_controller
    get:
      operationId: models_model_id_get
      parameters:
      - description: Model identifier
        in: path
        name: modelId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Return metadata of specific model
      tags:
      - models
      x-openapi-router-controller: mcenter_server_api.controllers.models_controller
  /models/{modelId}/dataCharacteristic:
    get:
      operationId: models_model_id_data_characteristic_get
      parameters:
      - description: Model identifier
        in: path
        name: modelId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelStat'
                type: array
          description: List of model characteristics (health)
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Fetch model characteristics also know as healths
      tags:
      - models
      x-openapi-router-controller: mcenter_server_api.controllers.models_controller
  /models/{modelId}/download:
    get:
      operationId: models_model_id_download_get
      parameters:
      - description: Model identifier
        in: path
        name: modelId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Model file
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Download specific model
      tags:
      - models
      x-openapi-router-controller: mcenter_server_api.controllers.models_controller
  /models/{modelId}/review:
    post:
      operationId: models_model_id_review_post
      parameters:
      - description: Model identifier
        in: path
        name: modelId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelReview'
        description: Model review parameters
        required: true
      responses:
        200:
          content: {}
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Review a model approve/reject for current mlApp
      tags:
      - models
      x-openapi-router-controller: mcenter_server_api.controllers.models_controller
  /models/{modelId}/source:
    get:
      operationId: models_model_id_source_get
      parameters:
      - description: Model identifier
        in: path
        name: modelId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelSource'
                type: array
          description: Model provenance
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Fetch model provenance
      tags:
      - models
      x-openapi-router-controller: mcenter_server_api.controllers.models_controller
  /models/{modelId}/status:
    get:
      operationId: models_model_id_status_get
      parameters:
      - description: Model identifier
        in: path
        name: modelId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelStatus'
                type: array
          description: Model status
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Fetch model status, list of mlApp approved/rejected for
      tags:
      - models
      x-openapi-router-controller: mcenter_server_api.controllers.models_controller
  /models/{modelId}/usage:
    get:
      operationId: models_model_id_usage_get
      parameters:
      - description: Model identifier
        in: path
        name: modelId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelUsage'
                type: array
          description: Model usage timestamps
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Fetch model usages time linked to pipelines
      tags:
      - models
      x-openapi-router-controller: mcenter_server_api.controllers.models_controller
  /onboarding/groups:
    get:
      operationId: onboarding_groups_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Get list of all groups
      tags:
      - groups
      x-openapi-router-controller: mcenter_server_api.controllers.groups_controller
    post:
      operationId: onboarding_groups_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Create group
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Add new group
      tags:
      - groups
      x-openapi-router-controller: mcenter_server_api.controllers.groups_controller
  /onboarding/groups/{groupId}:
    delete:
      operationId: onboarding_groups_group_id_delete
      parameters:
      - description: Group identifier
        in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Delete a group
      tags:
      - groups
      x-openapi-router-controller: mcenter_server_api.controllers.groups_controller
    get:
      operationId: onboarding_groups_group_id_get
      parameters:
      - description: Group identifier
        in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Get details of specific group
      tags:
      - groups
      x-openapi-router-controller: mcenter_server_api.controllers.groups_controller
    put:
      operationId: onboarding_groups_group_id_put
      parameters:
      - description: Group identifier
        in: path
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group detail description
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error.
      summary: Update group information
      tags:
      - groups
      x-openapi-router-controller: mcenter_server_api.controllers.groups_controller
  /onboarding/mlAppPatterns:
    get:
      operationId: onboarding_ml_app_patterns_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MLAppPattern'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Get list of all MLApp patterns
      tags:
      - MLApp patterns
      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_patterns_controller
    post:
      operationId: onboarding_ml_app_patterns_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLAppPattern'
        description: MLApp pattern detail description
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLAppPattern'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Create a new MLApp pattern
      tags:
      - MLApp patterns
      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_patterns_controller
  /onboarding/mlAppPatterns/{mlAppPatternId}:
    delete:
      operationId: onboarding_ml_app_patterns_ml_app_pattern_id_delete
      parameters:
      - description: MLApp pattern identifier
        in: path
        name: mlAppPatternId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Delete an existing MLApp pattern
      tags:
      - MLApp patterns
      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_patterns_controller
    get:
      operationId: onboarding_ml_app_patterns_ml_app_pattern_id_get
      parameters:
      - description: MLApp pattern identifier
        in: path
        name: mlAppPatternId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLAppPattern'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Get specific MLApp pattern
      tags:
      - MLApp patterns
      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_patterns_controller
    put:
      operationId: onboarding_ml_app_patterns_ml_app_pattern_id_put
      parameters:
      - description: MLApp pattern identifier
        in: path
        name: mlAppPatternId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLAppPattern'
        description: MLApp pattern detail configuration
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLAppPattern'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Update an existing MLApp pattern
      tags:
      - MLApp patterns
      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_patterns_controller
  /onboarding/mlAppProfiles:
    get:
      operationId: onboarding_ml_app_profiles_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MLAppProfile'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Get list of all MLApp profiles
      tags:
      - MLApp profiles
      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_profiles_controller
    post:
      operationId: onboarding_ml_app_profiles_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLAppProfile'
        description: MLApp profile detail description
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLAppProfile'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Create a new MLApp profile
      tags:
      - MLApp profiles
      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_profiles_controller
  /onboarding/mlAppProfiles/{mlAppProfileId}:
    delete:
      operationId: onboarding_ml_app_profiles_ml_app_profile_id_delete
      parameters:
      - description: MLApp profile identifier
        in: path
        name: mlAppProfileId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Delete an existing MLApp profile
      tags:
      - MLApp profiles
      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_profiles_controller
    get:
      operationId: onboarding_ml_app_profiles_ml_app_profile_id_get
      parameters:
      - description: MLApp profile identifier
        in: path
        name: mlAppProfileId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLAppProfile'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Get specific MLApp profile
      tags:
      - MLApp profiles
      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_profiles_controller
    put:
      operationId: onboarding_ml_app_profiles_ml_app_profile_id_put
      parameters:
      - description: MLApp profile identifier
        in: path
        name: mlAppProfileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLAppProfile'
        description: MLApp profile detail configuration
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLAppProfile'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Update an existing MLApp profile
      tags:
      - MLApp profiles
      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_profiles_controller
  /onboarding/pipelinePatterns:
    get:
      operationId: onboarding_pipeline_patterns_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PipelinePattern'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Get list of all pipeline patterns
      tags:
      - pipeline patterns
      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_patterns_controller
    post:
      operationId: onboarding_pipeline_patterns_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelinePattern'
        description: Pipeline detail description
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelinePattern'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Create a new pipeline pattern
      tags:
      - pipeline patterns
      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_patterns_controller
  /onboarding/pipelinePatterns/{pipelinePatternId}:
    delete:
      operationId: onboarding_pipeline_patterns_pipeline_pattern_id_delete
      parameters:
      - description: Pipeline pattern identifier
        in: path
        name: pipelinePatternId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Delete an existing pipeline pattern
      tags:
      - pipeline patterns
      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_patterns_controller
    get:
      operationId: onboarding_pipeline_patterns_pipeline_pattern_id_get
      parameters:
      - description: Pipeline pattern identifier
        in: path
        name: pipelinePatternId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelinePattern'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Get specific pipeline pattern
      tags:
      - pipeline patterns
      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_patterns_controller
    put:
      operationId: onboarding_pipeline_patterns_pipeline_pattern_id_put
      parameters:
      - description: Pipeline pattern identifier
        in: path
        name: pipelinePatternId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelinePattern'
        description: Pipeline pattern detail configuration
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelinePattern'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Update an existing pipeline pattern
      tags:
      - pipeline patterns
      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_patterns_controller
  /onboarding/pipelineProfiles:
    get:
      operationId: onboarding_pipeline_profiles_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PipelineProfile'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error.
      summary: Get list of all pipeline profiles
      tags:
      - pipeline profiles
      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_profiles_controller
    post:
      operationId: onboarding_pipeline_profiles_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineProfile'
        description: Pipeline detail description
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineProfile'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Create a new pipeline profile
      tags:
      - pipeline profiles
      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_profiles_controller
  /onboarding/pipelineProfiles/{pipelineProfileId}:
    delete:
      operationId: onboarding_pipeline_profiles_pipeline_profile_id_delete
      parameters:
      - description: Pipeline profile identifier
        in: path
        name: pipelineProfileId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Delete an existing pipeline profile
      tags:
      - pipeline profiles
      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_profiles_controller
    get:
      operationId: onboarding_pipeline_profiles_pipeline_profile_id_get
      parameters:
      - description: Pipeline profile identifier
        in: path
        name: pipelineProfileId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PipelineProfile'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error.
      summary: Get list of pipeline profiles
      tags:
      - pipeline profiles
      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_profiles_controller
    put:
      operationId: onboarding_pipeline_profiles_pipeline_profile_id_put
      parameters:
      - description: Pipeline profile identifier
        in: path
        name: pipelineProfileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineProfile'
        description: Pipeline profile detail configuration
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineProfile'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Update an existing pipeline profile
      tags:
      - pipeline profiles
      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_profiles_controller
  /reports:
    get:
      operationId: reports_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Report'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Extract business report
      tags:
      - reports
      x-openapi-router-controller: mcenter_server_api.controllers.reports_controller
  /roles:
    get:
      operationId: roles_get
      responses:
        200:
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Get list of roles
      tags:
      - roles
      x-openapi-router-controller: mcenter_server_api.controllers.roles_controller
    post:
      operationId: roles_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        description: Role detail description
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Register an role
      tags:
      - roles
      x-openapi-router-controller: mcenter_server_api.controllers.roles_controller
  /roles/{roleId}:
    delete:
      operationId: roles_role_id_delete
      parameters:
      - description: Role identifier
        in: path
        name: roleId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Deregister an role
      tags:
      - roles
      x-openapi-router-controller: mcenter_server_api.controllers.roles_controller
    get:
      operationId: roles_role_id_get
      parameters:
      - description: Role identifier
        in: path
        name: roleId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: List details of specific role
      tags:
      - roles
      x-openapi-router-controller: mcenter_server_api.controllers.roles_controller
    put:
      operationId: roles_role_id_put
      parameters:
      - description: Role identifier
        in: path
        name: roleId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        description: Update role object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Update role information
      tags:
      - roles
      x-openapi-router-controller: mcenter_server_api.controllers.roles_controller
  /settings/buildManifest:
    get:
      operationId: settings_build_manifest_get
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /settings/globalParameters:
    get:
      operationId: settings_global_parameters_get
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /sourcecontrol/credentials:
    get:
      operationId: sourcecontrol_credentials_get
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
    post:
      operationId: sourcecontrol_credentials_post
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /sourcecontrol/credentials/{name}:
    delete:
      operationId: sourcecontrol_credentials_name_delete
      parameters:
      - description: Source control credential name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
    get:
      operationId: sourcecontrol_credentials_name_get
      parameters:
      - description: Source control credential name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /sourcecontrol/repos:
    get:
      operationId: sourcecontrol_repos_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Repo'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Get list of all registered repositories
      tags:
      - repository
      x-openapi-router-controller: mcenter_server_api.controllers.repository_controller
    post:
      operationId: sourcecontrol_repos_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repo'
        description: Repository details
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repo'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Register a repository
      tags:
      - repository
      x-openapi-router-controller: mcenter_server_api.controllers.repository_controller
  /sourcecontrol/repos/{repoId}:
    delete:
      operationId: sourcecontrol_repos_repo_id_delete
      parameters:
      - description: Source control repository identifier
        in: path
        name: repoId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
    get:
      operationId: sourcecontrol_repos_repo_id_get
      parameters:
      - description: Source control repository identifier
        in: path
        name: repoId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
    put:
      operationId: sourcecontrol_repos_repo_id_put
      parameters:
      - description: Source control repository identifier
        in: path
        name: repoId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /sourcecontrol/repos/{repoId}/refs:
    get:
      operationId: sourcecontrol_repos_repo_id_refs_get
      parameters:
      - description: Source control repository identifier
        in: path
        name: repoId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /stats:
    get:
      operationId: stats_get
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      x-openapi-router-controller: mcenter_server_api.controllers.default_controller
  /timelineCaptures:
    get:
      operationId: timeline_captures_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimelineCapture'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Get list of all timeline captures
      tags:
      - timeline captures
      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller
    post:
      operationId: timeline_captures_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimelineCapture'
        description: Timeline capture details
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimelineCapture'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Create a timeline capture
      tags:
      - timeline captures
      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller
  /timelineCaptures/{timelineCaptureId}:
    delete:
      operationId: timeline_captures_timeline_capture_id_delete
      parameters:
      - description: Timeline capture identifier
        in: path
        name: timelineCaptureId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Delete a timeline capture
      tags:
      - timeline captures
      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller
    get:
      operationId: timeline_captures_timeline_capture_id_get
      parameters:
      - description: Timeline capture identifier
        in: path
        name: timelineCaptureId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimelineCapture'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Return details of specific timeline capture
      tags:
      - timeline captures
      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller
  /timelineCaptures/{timelineCaptureId}/download:
    get:
      operationId: timeline_captures_timeline_capture_id_download_get
      parameters:
      - description: Timeline capture identifier
        in: path
        name: timelineCaptureId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: timeline capture tar file
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Download specific model
      tags:
      - timeline captures
      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller
  /timelineCaptures/{timelineCaptureId}/prepare:
    post:
      operationId: timeline_captures_timeline_capture_id_prepare_post
      parameters:
      - description: Timeline capture identifier
        in: path
        name: timelineCaptureId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Prepare timeline capture for download
      tags:
      - timeline captures
      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller
  /timelineCaptures/{timelineCaptureId}/prepareStatus:
    get:
      operationId: timeline_captures_timeline_capture_id_prepare_status_get
      parameters:
      - description: Timeline capture identifier
        in: path
        name: timelineCaptureId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Return status of timeline capture for download
      tags:
      - timeline captures
      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller
  /users:
    get:
      operationId: users_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Get list of users
      tags:
      - users
      x-openapi-router-controller: mcenter_server_api.controllers.users_controller
    post:
      operationId: users_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User detail description
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        500:
          content: {}
          description: Internal Server error
      summary: Create a new user
      tags:
      - users
      x-openapi-router-controller: mcenter_server_api.controllers.users_controller
  /users/{userId}:
    delete:
      operationId: users_user_id_delete
      parameters:
      - description: User identifier
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Deregister an user
      tags:
      - users
      x-openapi-router-controller: mcenter_server_api.controllers.users_controller
    get:
      operationId: users_user_id_get
      parameters:
      - description: User identifier
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: List details of specific user
      tags:
      - users
      x-openapi-router-controller: mcenter_server_api.controllers.users_controller
    put:
      operationId: users_user_id_put
      parameters:
      - description: User identifier
        in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Update user object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        404:
          content: {}
          description: Not found
        500:
          content: {}
          description: Internal Server error
      summary: Update user information
      tags:
      - users
      x-openapi-router-controller: mcenter_server_api.controllers.users_controller
components:
  parameters:
    repoId:
      description: Source control repository identifier
      in: path
      name: repoId
      required: true
      schema:
        type: string
    agentId:
      description: Agent identifier
      in: path
      name: agentId
      required: true
      schema:
        type: string
    modelId:
      description: Model identifier
      in: path
      name: modelId
      required: true
      schema:
        type: string
    roleId:
      description: Role identifier
      in: path
      name: roleId
      required: true
      schema:
        type: string
    groupId:
      description: Group identifier
      in: path
      name: groupId
      required: true
      schema:
        type: string
    mlAppProfileId:
      description: MLApp profile identifier
      in: path
      name: mlAppProfileId
      required: true
      schema:
        type: string
    timelineCaptureId:
      description: Timeline capture identifier
      in: path
      name: timelineCaptureId
      required: true
      schema:
        type: string
    pipelineProfileId:
      description: Pipeline profile identifier
      in: path
      name: pipelineProfileId
      required: true
      schema:
        type: string
    mlAppInstanceId:
      description: MLApp instance identifier
      in: path
      name: mlAppInstanceId
      required: true
      schema:
        type: string
    pipelinePatternId:
      description: Pipeline pattern identifier
      in: path
      name: pipelinePatternId
      required: true
      schema:
        type: string
    userId:
      description: User identifier
      in: path
      name: userId
      required: true
      schema:
        type: string
    mlAppPatternId:
      description: MLApp pattern identifier
      in: path
      name: mlAppPatternId
      required: true
      schema:
        type: string
    name:
      description: Source control credential name
      in: path
      name: name
      required: true
      schema:
        type: string
  schemas:
    IntervalChart:
      example:
        graphType: graphType
        legend: legend
        creationTimes:
        - key: 0
        - key: 0
      properties:
        creationTimes:
          items:
            additionalProperties:
              type: integer
            type: object
          type: array
        graphType:
          type: string
        legend:
          type: string
      type: object
    Group:
      example:
        createdBy: createdBy
        created: 0
        name: name
        id: id
        workflows:
        - '{}'
        - '{}'
        agentSet:
        - '{}'
        - '{}'
        agents:
        - agents
        - agents
      properties:
        agentSet:
          items:
            type: object
          type: array
        agents:
          items:
            type: string
          type: array
        created:
          format: int64
          minimum: 0
          readOnly: true
          type: integer
        createdBy:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        name:
          type: string
        workflows:
          items:
            type: object
          type: array
      type: object
    User:
      example:
        lastName: lastName
        avatarURL: avatarURL
        created: 0
        accountType: accountType
        authMode: authMode
        firstName: firstName
        password: password
        roleIds:
        - roleIds
        - roleIds
        createdBy: createdBy
        name: name
        id: id
        email: email
        contactNo: contactNo
        username: username
      properties:
        accountType:
          type: string
        authMode:
          type: string
        avatarURL:
          type: string
        contactNo:
          type: string
        created:
          format: int64
          minimum: 0
          readOnly: true
          type: integer
        createdBy:
          readOnly: true
          type: string
        email:
          type: string
        firstName:
          type: string
        id:
          readOnly: true
          type: string
        lastName:
          type: string
        name:
          type: string
        password:
          type: string
        roleIds:
          items:
            type: string
          type: array
        username:
          type: string
      required:
      - username
      type: object
    Role_permissions:
      example:
        map:
          Model: 6
          ION Pattern: 1
          Sandbox ION Instance: 5
          Component: 5
          Production ION Instance: 2
          Profile: 7
          Pipeline: 9
      properties:
        map:
          $ref: '#/components/schemas/Role_permissions_map'
    MLAppProfile_workflow:
      example:
        parent: parent
        children: children
        workflowNodeType: workflowNodeType
        restServerPort: 6
        parallelism: 1
        pipelineMode: pipelineMode
        id: id
        isVisible: true
        pipelineType: pipelineType
        pipelineAgentSet:
          agentId: agentId
          pipelineProfileId: pipelineProfileId
        pipelinePatternId: pipelinePatternId
        cronSchedule: cronSchedule
      properties:
        parent:
          type: string
        children:
          type: string
        workflowNodeType:
          type: string
        restServerPort:
          type: integer
        parallelism:
          type: integer
        pipelineMode:
          type: string
        id:
          type: string
        isVisible:
          type: boolean
        pipelineType:
          type: string
        pipelineAgentSet:
          $ref: '#/components/schemas/MLAppProfile_pipelineAgentSet'
        pipelinePatternId:
          type: string
        cronSchedule:
          type: string
    Dashboard_ionHealthInfo:
      example:
        pipeline: pipeline
        ionNodeId: ionNodeId
        host: host
        location: location
        error: error
      properties:
        pipeline:
          type: string
        ionNodeId:
          type: string
        host:
          type: string
        location:
          type: string
        error:
          type: string
    Dashboard:
      example:
        ionHealthInfo:
        - pipeline: pipeline
          ionNodeId: ionNodeId
          host: host
          location: location
          error: error
        - pipeline: pipeline
          ionNodeId: ionNodeId
          host: host
          location: location
          error: error
        pendingModels: 2
        totalSamplesProcessed: 4
        ionInstance: '{}'
        avgLatency: 6
        totalPredictions: 2
        avgInferenceTime: 0
        isMLHealthy: true
        avgTrainingTime: 1
        dataAlerts: 5
        enableHealth: true
        operationMode: operationMode
        totalDataProcessed: 7
        totalModelsProduced: 9
        mlAlerts: 5
        isSystemHealthy: true
        totalModelsUpdated: 3
        status: true
      properties:
        avgInferenceTime:
          format: int64
          type: integer
        avgLatency:
          format: int64
          type: integer
        avgTrainingTime:
          format: int64
          type: integer
        dataAlerts:
          format: int64
          type: integer
        enableHealth:
          type: boolean
        ionHealthInfo:
          items:
            $ref: '#/components/schemas/Dashboard_ionHealthInfo'
          type: array
        ionInstance:
          properties: {}
          type: object
        isMLHealthy:
          type: boolean
        isSystemHealthy:
          type: boolean
        mlAlerts:
          format: int64
          type: integer
        operationMode:
          type: string
        pendingModels:
          format: int64
          type: integer
        status:
          type: boolean
        totalDataProcessed:
          format: int64
          type: integer
        totalModelsProduced:
          format: int64
          type: integer
        totalModelsUpdated:
          format: int64
          type: integer
        totalPredictions:
          format: int64
          type: integer
        totalSamplesProcessed:
          format: int64
          type: integer
      type: object
    ModelReview:
      example:
        action: action
        description: description
        mlAppInstanceId: mlAppInstanceId
      properties:
        action:
          type: string
        description:
          type: string
        mlAppInstanceId:
          type: string
      type: object
    ModelSource:
      example:
        mode: mode
        details:
          createdTime: 0
          description: description
          user: user
      properties:
        details:
          $ref: '#/components/schemas/ModelSource_details'
        mode:
          type: string
      type: object
    ModelSource_details:
      example:
        createdTime: 0
        description: description
        user: user
      properties:
        createdTime:
          type: integer
        description:
          type: string
        user:
          type: string
    MLAppPattern:
      example:
        enableHealth: true
        isProfile: true
        canaryThreshold: 0
        workflow:
        - parent: parent
          children: children
          workflowNodeType: workflowNodeType
          restServerPort: 5
          parallelism: 2
          pipelineMode: pipelineMode
          id: id
          isVisible: true
          pipelineType: pipelineType
          pipelinePatternId: pipelinePatternId
          cronSchedule: cronSchedule
        - parent: parent
          children: children
          workflowNodeType: workflowNodeType
          restServerPort: 5
          parallelism: 2
          pipelineMode: pipelineMode
          id: id
          isVisible: true
          pipelineType: pipelineType
          pipelinePatternId: pipelinePatternId
          cronSchedule: cronSchedule
        createdBy: createdBy
        created: 6
        modelPolicy: modelPolicy
        runNow: true
        name: name
        runIterations: 5
        globalThreshold: 1
        id: id
      properties:
        canaryThreshold:
          format: float
          type: integer
        created:
          format: float
          readOnly: true
          type: integer
        createdBy:
          readOnly: true
          type: string
        enableHealth:
          type: boolean
        globalThreshold:
          format: float
          type: integer
        id:
          readOnly: true
          type: string
        isProfile:
          type: boolean
        modelPolicy:
          type: string
        name:
          type: string
        runIterations:
          type: integer
        runNow:
          type: boolean
        workflow:
          items:
            $ref: '#/components/schemas/MLAppPattern_workflow'
          type: array
      type: object
    PipelineProfile:
      example:
        isProfile: true
        pipeline: pipeline
        createdBy: createdBy
        defaultModelId: defaultModelId
        created: 0
        name: name
        engineType: engineType
        isUserDefined: true
        pipelinePatternName: pipelinePatternName
        id: id
        isVisible: true
        pipelinePatternId: pipelinePatternId
      properties:
        created:
          format: int64
          minimum: 0
          readOnly: true
          type: integer
        createdBy:
          readOnly: true
          type: string
        defaultModelId:
          type: string
        engineType:
          type: string
        id:
          readOnly: true
          type: string
        isProfile:
          type: boolean
        isUserDefined:
          type: boolean
        isVisible:
          type: boolean
        name:
          type: string
        pipeline:
          type: string
        pipelinePatternId:
          type: string
        pipelinePatternName:
          type: string
      type: object
    DataComparisonView_series:
      example:
        mode: mode
        legend: legend
        dbName: dbName
        query: query
        host: host
      properties:
        mode:
          type: string
        legend:
          type: string
        dbName:
          type: string
        query:
          type: string
        host:
          type: string
    ChartView_mlStat:
      example:
        graphType: graphType
        name: name
        id: id
        category: category
      properties:
        graphType:
          type: string
        name:
          type: string
        id:
          type: string
        category:
          type: string
    inline_response_200:
      example:
        sandboxAlerts:
        - - modelId: modelId
            created: 0
            pipelineInstanceId: pipelineInstanceId
            createdTimestamp: 1
            description: description
            clearedTimestamp: 0
            deletedTimestamp: 5
            createdBy: createdBy
            host: host
            name: name
            raiseAlert: true
            id: id
            workflowRunId: workflowRunId
          - modelId: modelId
            created: 0
            pipelineInstanceId: pipelineInstanceId
            createdTimestamp: 1
            description: description
            clearedTimestamp: 0
            deletedTimestamp: 5
            createdBy: createdBy
            host: host
            name: name
            raiseAlert: true
            id: id
            workflowRunId: workflowRunId
        - - modelId: modelId
            created: 0
            pipelineInstanceId: pipelineInstanceId
            createdTimestamp: 1
            description: description
            clearedTimestamp: 0
            deletedTimestamp: 5
            createdBy: createdBy
            host: host
            name: name
            raiseAlert: true
            id: id
            workflowRunId: workflowRunId
          - modelId: modelId
            created: 0
            pipelineInstanceId: pipelineInstanceId
            createdTimestamp: 1
            description: description
            clearedTimestamp: 0
            deletedTimestamp: 5
            createdBy: createdBy
            host: host
            name: name
            raiseAlert: true
            id: id
            workflowRunId: workflowRunId
        productionAlerts:
        - - modelId: modelId
            created: 0
            pipelineInstanceId: pipelineInstanceId
            createdTimestamp: 1
            description: description
            clearedTimestamp: 0
            deletedTimestamp: 5
            createdBy: createdBy
            host: host
            name: name
            raiseAlert: true
            id: id
            workflowRunId: workflowRunId
          - modelId: modelId
            created: 0
            pipelineInstanceId: pipelineInstanceId
            createdTimestamp: 1
            description: description
            clearedTimestamp: 0
            deletedTimestamp: 5
            createdBy: createdBy
            host: host
            name: name
            raiseAlert: true
            id: id
            workflowRunId: workflowRunId
        - - modelId: modelId
            created: 0
            pipelineInstanceId: pipelineInstanceId
            createdTimestamp: 1
            description: description
            clearedTimestamp: 0
            deletedTimestamp: 5
            createdBy: createdBy
            host: host
            name: name
            raiseAlert: true
            id: id
            workflowRunId: workflowRunId
          - modelId: modelId
            created: 0
            pipelineInstanceId: pipelineInstanceId
            createdTimestamp: 1
            description: description
            clearedTimestamp: 0
            deletedTimestamp: 5
            createdBy: createdBy
            host: host
            name: name
            raiseAlert: true
            id: id
            workflowRunId: workflowRunId
      properties:
        sandboxAlerts:
          items:
            items:
              $ref: '#/components/schemas/Event'
            type: array
          type: array
        productionAlerts:
          items:
            items:
              $ref: '#/components/schemas/Event'
            type: array
          type: array
    DataView_ion_status:
      example:
        createdBy: createdBy
        name: name
        createdTime: 5
        status: status
      properties:
        createdBy:
          type: string
        name:
          type: string
        createdTime:
          format: int64
          type: integer
        status:
          type: string
    ModelStatus:
      example:
        approvalDetails:
        - '{}'
        - '{}'
        modelId: modelId
        rejectionDetails:
        - '{}'
        - '{}'
        user: user
      properties:
        approvalDetails:
          items:
            properties: {}
            type: object
          type: array
        modelId:
          type: string
        rejectionDetails:
          items:
            properties: {}
            type: object
          type: array
        user:
          type: string
      type: object
    Agent:
      example:
        address: address
        createdBy: createdBy
        created: 0
        id: id
      properties:
        address:
          type: string
        created:
          format: int64
          minimum: 0
          readOnly: true
          type: integer
        createdBy:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
      required:
      - address
      type: object
    DataComparisonView:
      example:
        series:
        - mode: mode
          legend: legend
          dbName: dbName
          query: query
          host: host
        - mode: mode
          legend: legend
          dbName: dbName
          query: query
          host: host
        name: name
        attribute: attribute
        type: type
        similarityScore: 0.8008282
      properties:
        attribute:
          type: string
        name:
          type: string
        series:
          items:
            $ref: '#/components/schemas/DataComparisonView_series'
          type: array
        similarityScore:
          format: float
          type: number
        type:
          type: string
      type: object
    ModelStat:
      example:
        data: data
        id: id
        type: type
      properties:
        data:
          type: string
        id:
          type: string
        type:
          type: string
      type: object
    ModelUsage:
      example:
        pipelineName: pipelineName
        ionNodeId: ionNodeId
        modelId: modelId
        ionId: ionId
        ionName: ionName
        usageTimes:
          start: 5
          end: 5
        mlAlerts: 6
        user: user
        dataAlerts: 0
        predictions: 1
        pipelineId: pipelineId
      properties:
        dataAlerts:
          format: int64
          type: integer
        ionId:
          type: string
        ionName:
          type: string
        ionNodeId:
          type: string
        mlAlerts:
          format: int64
          type: integer
        modelId:
          type: string
        pipelineId:
          type: string
        pipelineName:
          type: string
        predictions:
          format: int64
          type: integer
        usageTimes:
          $ref: '#/components/schemas/ModelUsage_usageTimes'
        user:
          type: string
      type: object
    Report:
      example:
        ionMetrics:
          QoQ:
            graphType: graphType
            legend: legend
            creationTimes:
            - key: 0
            - key: 0
          MoM:
            graphType: graphType
            legend: legend
            creationTimes:
            - key: 0
            - key: 0
          WoW:
            graphType: graphType
            legend: legend
            creationTimes:
            - key: 0
            - key: 0
      properties:
        ionMetrics:
          $ref: '#/components/schemas/Report_ionMetrics'
      type: object
    MLAppProfile_pipelineAgentSet:
      example:
        agentId: agentId
        pipelineProfileId: pipelineProfileId
      properties:
        agentId:
          type: string
        pipelineProfileId:
          type: string
    Role_permissions_map:
      example:
        Model: 6
        ION Pattern: 1
        Sandbox ION Instance: 5
        Component: 5
        Production ION Instance: 2
        Profile: 7
        Pipeline: 9
      properties:
        Model:
          type: integer
        ION Pattern:
          type: integer
        Sandbox ION Instance:
          type: integer
        Component:
          type: integer
        Production ION Instance:
          type: integer
        Profile:
          type: integer
        Pipeline:
          type: integer
    DataView_ion:
      example:
        pattern:
          isProfile: true
          workflow:
          - parent: parent
            children: children
            workflowNodeType: workflowNodeType
            restServerPort: 6
            parallelism: 1
            pipelineMode: pipelineMode
            id: id
            isVisible: true
            pipelineType: pipelineType
            pipelineAgentSet:
              agentId: agentId
              pipelineProfileId: pipelineProfileId
            pipelinePatternId: pipelinePatternId
            cronSchedule: cronSchedule
          - parent: parent
            children: children
            workflowNodeType: workflowNodeType
            restServerPort: 6
            parallelism: 1
            pipelineMode: pipelineMode
            id: id
            isVisible: true
            pipelineType: pipelineType
            pipelineAgentSet:
              agentId: agentId
              pipelineProfileId: pipelineProfileId
            pipelinePatternId: pipelinePatternId
            cronSchedule: cronSchedule
          mlAppPatternId: mlAppPatternId
          mlAppPatternName: mlAppPatternName
          version: version
        status:
          createdBy: createdBy
          name: name
          createdTime: 5
          status: status
      properties:
        pattern:
          $ref: '#/components/schemas/MLAppProfile'
        status:
          $ref: '#/components/schemas/DataView_ion_status'
    HealthView:
      example:
        kpi:
          dbName: dbName
          query: query
          name: name
          type: type
        ionID: ionID
        start: 1
        isMLHealthy: true
        bargraphs:
        - series:
          - mode: mode
            legend: legend
            dbName: dbName
            query: query
            host: host
          - mode: mode
            legend: legend
            dbName: dbName
            query: query
            host: host
          name: name
          attribute: attribute
          type: type
          similarityScore: 0.8008282
        - series:
          - mode: mode
            legend: legend
            dbName: dbName
            query: query
            host: host
          - mode: mode
            legend: legend
            dbName: dbName
            query: query
            host: host
          name: name
          attribute: attribute
          type: type
          similarityScore: 0.8008282
        end: 6
        heatmaps:
        - dbName: dbName
          query: query
          name: name
          attributes:
          - attributes
          - attributes
          type: type
        - dbName: dbName
          query: query
          name: name
          attributes:
          - attributes
          - attributes
          type: type
        events:
          dbName: dbName
          query: query
          name: name
          type: type
      properties:
        bargraphs:
          items:
            $ref: '#/components/schemas/DataComparisonView'
          type: array
        end:
          format: int64
          type: integer
        events:
          $ref: '#/components/schemas/HealthView_events'
        heatmaps:
          items:
            $ref: '#/components/schemas/HeatmapView'
          type: array
        ionID:
          type: string
        isMLHealthy:
          type: boolean
        kpi:
          $ref: '#/components/schemas/HealthView_events'
        start:
          format: int64
          type: integer
      type: object
    ChartView:
      example:
        dbName: dbName
        query: query
        mlStat:
          graphType: graphType
          name: name
          id: id
          category: category
        id: id
        title: title
        configurable: true
      properties:
        configurable:
          type: boolean
        dbName:
          type: string
        id:
          type: string
        mlStat:
          $ref: '#/components/schemas/ChartView_mlStat'
        query:
          type: string
        title:
          type: string
      type: object
    Role:
      example:
        createdBy: createdBy
        created: 0
        permissions:
          map:
            Model: 6
            ION Pattern: 1
            Sandbox ION Instance: 5
            Component: 5
            Production ION Instance: 2
            Profile: 7
            Pipeline: 9
        name: name
        description: description
        id: id
      properties:
        created:
          format: int64
          minimum: 0
          readOnly: true
          type: integer
        createdBy:
          readOnly: true
          type: string
        description:
          type: string
        id:
          readOnly: true
          type: string
        name:
          type: string
        permissions:
          $ref: '#/components/schemas/Role_permissions'
      required:
      - description
      - name
      type: object
    DataView:
      example:
        agentId: agentId
        charts:
        - dbName: dbName
          query: query
          mlStat:
            graphType: graphType
            name: name
            id: id
            category: category
          id: id
          title: title
          configurable: true
        - dbName: dbName
          query: query
          mlStat:
            graphType: graphType
            name: name
            id: id
            category: category
          id: id
          title: title
          configurable: true
        ionNodeId: ionNodeId
        ionID: ionID
        start: 5
        ion:
          pattern:
            isProfile: true
            workflow:
            - parent: parent
              children: children
              workflowNodeType: workflowNodeType
              restServerPort: 6
              parallelism: 1
              pipelineMode: pipelineMode
              id: id
              isVisible: true
              pipelineType: pipelineType
              pipelineAgentSet:
                agentId: agentId
                pipelineProfileId: pipelineProfileId
              pipelinePatternId: pipelinePatternId
              cronSchedule: cronSchedule
            - parent: parent
              children: children
              workflowNodeType: workflowNodeType
              restServerPort: 6
              parallelism: 1
              pipelineMode: pipelineMode
              id: id
              isVisible: true
              pipelineType: pipelineType
              pipelineAgentSet:
                agentId: agentId
                pipelineProfileId: pipelineProfileId
              pipelinePatternId: pipelinePatternId
              cronSchedule: cronSchedule
            mlAppPatternId: mlAppPatternId
            mlAppPatternName: mlAppPatternName
            version: version
          status:
            createdBy: createdBy
            name: name
            createdTime: 5
            status: status
        isMLHealthy: true
        end: 0
        events:
          dbName: dbName
          query: query
          name: name
          type: type
        pipelineId: pipelineId
      properties:
        agentId:
          type: string
        charts:
          items:
            $ref: '#/components/schemas/ChartView'
          type: array
        end:
          format: int64
          type: integer
        events:
          $ref: '#/components/schemas/HealthView_events'
        ion:
          $ref: '#/components/schemas/DataView_ion'
        ionID:
          type: string
        ionNodeId:
          type: string
        isMLHealthy:
          type: boolean
        pipelineId:
          type: string
        start:
          format: int64
          type: integer
      type: object
    PipelinePattern:
      example:
        isProfile: true
        pipeline: pipeline
        createdBy: createdBy
        defaultModelId: defaultModelId
        created: 0
        name: name
        engineType: engineType
        isUserDefined: true
        id: id
        isVisible: true
      properties:
        created:
          format: int64
          minimum: 0
          readOnly: true
          type: integer
        createdBy:
          readOnly: true
          type: string
        defaultModelId:
          type: string
        engineType:
          type: string
        id:
          readOnly: true
          type: string
        isProfile:
          type: boolean
        isUserDefined:
          type: boolean
        isVisible:
          type: boolean
        name:
          type: string
        pipeline:
          type: string
      type: object
    HeatmapView:
      example:
        dbName: dbName
        query: query
        name: name
        attributes:
        - attributes
        - attributes
        type: type
      properties:
        attributes:
          items:
            type: string
          type: array
        dbName:
          type: string
        name:
          type: string
        query:
          type: string
        type:
          type: string
      type: object
    MLAppProfile:
      example:
        isProfile: true
        workflow:
        - parent: parent
          children: children
          workflowNodeType: workflowNodeType
          restServerPort: 6
          parallelism: 1
          pipelineMode: pipelineMode
          id: id
          isVisible: true
          pipelineType: pipelineType
          pipelineAgentSet:
            agentId: agentId
            pipelineProfileId: pipelineProfileId
          pipelinePatternId: pipelinePatternId
          cronSchedule: cronSchedule
        - parent: parent
          children: children
          workflowNodeType: workflowNodeType
          restServerPort: 6
          parallelism: 1
          pipelineMode: pipelineMode
          id: id
          isVisible: true
          pipelineType: pipelineType
          pipelineAgentSet:
            agentId: agentId
            pipelineProfileId: pipelineProfileId
          pipelinePatternId: pipelinePatternId
          cronSchedule: cronSchedule
        mlAppPatternId: mlAppPatternId
        mlAppPatternName: mlAppPatternName
        version: version
      properties:
        isProfile:
          type: boolean
        mlAppPatternId:
          type: string
        mlAppPatternName:
          type: string
        version:
          type: string
        workflow:
          items:
            $ref: '#/components/schemas/MLAppProfile_workflow'
          type: array
      type: object
    Repo:
      type: object
    Report_ionMetrics:
      example:
        QoQ:
          graphType: graphType
          legend: legend
          creationTimes:
          - key: 0
          - key: 0
        MoM:
          graphType: graphType
          legend: legend
          creationTimes:
          - key: 0
          - key: 0
        WoW:
          graphType: graphType
          legend: legend
          creationTimes:
          - key: 0
          - key: 0
      properties:
        QoQ:
          $ref: '#/components/schemas/IntervalChart'
        MoM:
          $ref: '#/components/schemas/IntervalChart'
        WoW:
          $ref: '#/components/schemas/IntervalChart'
    Model:
      example:
        modelId: modelId
        created: 0
        approvedForIons:
        - approvedForIons
        - approvedForIons
        createdTimestamp: 1
        format: format
        clearedTimestamp: 0
        reviewedBy: reviewedBy
        modelSize: 5
        deletedTimestamp: 5
        createdBy: createdBy
        rejectedForIons:
        - rejectedForIons
        - rejectedForIons
        host: host
        name: name
        id: id
        state: state
        stateDescription: stateDescription
      properties:
        approvedForIons:
          items:
            type: string
          type: array
        clearedTimestamp:
          type: integer
        created:
          format: int64
          minimum: 0
          readOnly: true
          type: integer
        createdBy:
          readOnly: true
          type: string
        createdTimestamp:
          type: integer
        deletedTimestamp:
          type: integer
        format:
          type: string
        host:
          type: string
        id:
          readOnly: true
          type: string
        modelId:
          type: string
        modelSize:
          type: integer
        name:
          type: string
        rejectedForIons:
          items:
            type: string
          type: array
        reviewedBy:
          type: string
        state:
          type: string
        stateDescription:
          type: string
      type: object
    inline_response_200_1:
      example:
        token: token
      properties:
        token:
          type: string
    MLAppPattern_workflow:
      example:
        parent: parent
        children: children
        workflowNodeType: workflowNodeType
        restServerPort: 5
        parallelism: 2
        pipelineMode: pipelineMode
        id: id
        isVisible: true
        pipelineType: pipelineType
        pipelinePatternId: pipelinePatternId
        cronSchedule: cronSchedule
      properties:
        parent:
          type: string
        children:
          type: string
        workflowNodeType:
          type: string
        restServerPort:
          type: integer
        parallelism:
          type: integer
        pipelineMode:
          type: string
        id:
          type: string
        isVisible:
          type: boolean
        pipelineType:
          type: string
        pipelinePatternId:
          type: string
        cronSchedule:
          type: string
    Event:
      example:
        modelId: modelId
        created: 0
        pipelineInstanceId: pipelineInstanceId
        createdTimestamp: 1
        description: description
        clearedTimestamp: 0
        deletedTimestamp: 5
        createdBy: createdBy
        host: host
        name: name
        raiseAlert: true
        id: id
        workflowRunId: workflowRunId
      properties:
        clearedTimestamp:
          type: integer
        created:
          format: int64
          minimum: 0
          readOnly: true
          type: integer
        createdBy:
          readOnly: true
          type: string
        createdTimestamp:
          type: integer
        deletedTimestamp:
          type: integer
        description:
          type: string
        host:
          type: string
        id:
          readOnly: true
          type: string
        modelId:
          type: string
        name:
          type: string
        pipelineInstanceId:
          type: string
        raiseAlert:
          type: boolean
        workflowRunId:
          type: string
      type: object
    inline_response_200_2:
      example:
        status: status
      properties:
        status:
          type: string
    ModelUsage_usageTimes:
      example:
        start: 5
        end: 5
      properties:
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
    TimelineCapture:
      example:
        workflowInstance: '{}'
        createdBy: createdBy
        created: 0
        name: name
        start: 1
        end: 6
        id: id
        workflowInstanceId: workflowInstanceId
        status: status
      properties:
        created:
          format: int64
          minimum: 0
          readOnly: true
          type: integer
        createdBy:
          readOnly: true
          type: string
        end:
          format: int64
          type: integer
        id:
          readOnly: true
          type: string
        name:
          type: string
        start:
          format: int64
          type: integer
        status:
          type: string
        workflowInstance:
          properties: {}
          type: object
        workflowInstanceId:
          type: string
      type: object
    HealthView_events:
      example:
        dbName: dbName
        query: query
        name: name
        type: type
      properties:
        dbName:
          type: string
        query:
          type: string
        name:
          type: string
        type:
          type: string
  securitySchemes:
    token:
      description: Cookie-based authentication twisted for swagger 2.0
      in: header
      name: Cookie
      type: apiKey
