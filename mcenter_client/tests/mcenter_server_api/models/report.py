# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mcenter_server_api.models.base_model_ import Model
from mcenter_server_api import util


class Report(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ion_metrics=None):  # noqa: E501
        """Report - a model defined in OpenAPI

        :param ion_metrics: The ion_metrics of this Report.  # noqa: E501
        :type ion_metrics: ReportIonMetrics
        """
        self.openapi_types = {
            'ion_metrics': 'ReportIonMetrics'
        }

        self.attribute_map = {
            'ion_metrics': 'ionMetrics'
        }

        self._ion_metrics = ion_metrics

    @classmethod
    def from_dict(cls, dikt) -> 'Report':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Report of this Report.  # noqa: E501
        :rtype: Report
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ion_metrics(self):
        """Gets the ion_metrics of this Report.


        :return: The ion_metrics of this Report.
        :rtype: ReportIonMetrics
        """
        return self._ion_metrics

    @ion_metrics.setter
    def ion_metrics(self, ion_metrics):
        """Sets the ion_metrics of this Report.


        :param ion_metrics: The ion_metrics of this Report.
        :type ion_metrics: ReportIonMetrics
        """

        self._ion_metrics = ion_metrics
