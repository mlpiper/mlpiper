# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mcenter_server_api.models.base_model_ import Model
from mcenter_server_api import util


class TimelineCapture(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created=None, created_by=None, end=None, id=None, name=None, start=None, status=None, workflow_instance=None, workflow_instance_id=None):  # noqa: E501
        """TimelineCapture - a model defined in OpenAPI

        :param created: The created of this TimelineCapture.  # noqa: E501
        :type created: int
        :param created_by: The created_by of this TimelineCapture.  # noqa: E501
        :type created_by: str
        :param end: The end of this TimelineCapture.  # noqa: E501
        :type end: int
        :param id: The id of this TimelineCapture.  # noqa: E501
        :type id: str
        :param name: The name of this TimelineCapture.  # noqa: E501
        :type name: str
        :param start: The start of this TimelineCapture.  # noqa: E501
        :type start: int
        :param status: The status of this TimelineCapture.  # noqa: E501
        :type status: str
        :param workflow_instance: The workflow_instance of this TimelineCapture.  # noqa: E501
        :type workflow_instance: object
        :param workflow_instance_id: The workflow_instance_id of this TimelineCapture.  # noqa: E501
        :type workflow_instance_id: str
        """
        self.openapi_types = {
            'created': 'int',
            'created_by': 'str',
            'end': 'int',
            'id': 'str',
            'name': 'str',
            'start': 'int',
            'status': 'str',
            'workflow_instance': 'object',
            'workflow_instance_id': 'str'
        }

        self.attribute_map = {
            'created': 'created',
            'created_by': 'createdBy',
            'end': 'end',
            'id': 'id',
            'name': 'name',
            'start': 'start',
            'status': 'status',
            'workflow_instance': 'workflowInstance',
            'workflow_instance_id': 'workflowInstanceId'
        }

        self._created = created
        self._created_by = created_by
        self._end = end
        self._id = id
        self._name = name
        self._start = start
        self._status = status
        self._workflow_instance = workflow_instance
        self._workflow_instance_id = workflow_instance_id

    @classmethod
    def from_dict(cls, dikt) -> 'TimelineCapture':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TimelineCapture of this TimelineCapture.  # noqa: E501
        :rtype: TimelineCapture
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this TimelineCapture.


        :return: The created of this TimelineCapture.
        :rtype: int
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this TimelineCapture.


        :param created: The created of this TimelineCapture.
        :type created: int
        """
        if created is not None and created < 0:  # noqa: E501
            raise ValueError("Invalid value for `created`, must be a value greater than or equal to `0`")  # noqa: E501

        self._created = created

    @property
    def created_by(self):
        """Gets the created_by of this TimelineCapture.


        :return: The created_by of this TimelineCapture.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this TimelineCapture.


        :param created_by: The created_by of this TimelineCapture.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def end(self):
        """Gets the end of this TimelineCapture.


        :return: The end of this TimelineCapture.
        :rtype: int
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this TimelineCapture.


        :param end: The end of this TimelineCapture.
        :type end: int
        """

        self._end = end

    @property
    def id(self):
        """Gets the id of this TimelineCapture.


        :return: The id of this TimelineCapture.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TimelineCapture.


        :param id: The id of this TimelineCapture.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this TimelineCapture.


        :return: The name of this TimelineCapture.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TimelineCapture.


        :param name: The name of this TimelineCapture.
        :type name: str
        """

        self._name = name

    @property
    def start(self):
        """Gets the start of this TimelineCapture.


        :return: The start of this TimelineCapture.
        :rtype: int
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this TimelineCapture.


        :param start: The start of this TimelineCapture.
        :type start: int
        """

        self._start = start

    @property
    def status(self):
        """Gets the status of this TimelineCapture.


        :return: The status of this TimelineCapture.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TimelineCapture.


        :param status: The status of this TimelineCapture.
        :type status: str
        """

        self._status = status

    @property
    def workflow_instance(self):
        """Gets the workflow_instance of this TimelineCapture.


        :return: The workflow_instance of this TimelineCapture.
        :rtype: object
        """
        return self._workflow_instance

    @workflow_instance.setter
    def workflow_instance(self, workflow_instance):
        """Sets the workflow_instance of this TimelineCapture.


        :param workflow_instance: The workflow_instance of this TimelineCapture.
        :type workflow_instance: object
        """

        self._workflow_instance = workflow_instance

    @property
    def workflow_instance_id(self):
        """Gets the workflow_instance_id of this TimelineCapture.


        :return: The workflow_instance_id of this TimelineCapture.
        :rtype: str
        """
        return self._workflow_instance_id

    @workflow_instance_id.setter
    def workflow_instance_id(self, workflow_instance_id):
        """Sets the workflow_instance_id of this TimelineCapture.


        :param workflow_instance_id: The workflow_instance_id of this TimelineCapture.
        :type workflow_instance_id: str
        """

        self._workflow_instance_id = workflow_instance_id
