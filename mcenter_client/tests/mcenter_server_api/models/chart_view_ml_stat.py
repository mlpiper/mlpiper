# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mcenter_server_api.models.base_model_ import Model
from mcenter_server_api import util


class ChartViewMlStat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, graph_type=None, name=None, id=None, category=None):  # noqa: E501
        """ChartViewMlStat - a model defined in OpenAPI

        :param graph_type: The graph_type of this ChartViewMlStat.  # noqa: E501
        :type graph_type: str
        :param name: The name of this ChartViewMlStat.  # noqa: E501
        :type name: str
        :param id: The id of this ChartViewMlStat.  # noqa: E501
        :type id: str
        :param category: The category of this ChartViewMlStat.  # noqa: E501
        :type category: str
        """
        self.openapi_types = {
            'graph_type': 'str',
            'name': 'str',
            'id': 'str',
            'category': 'str'
        }

        self.attribute_map = {
            'graph_type': 'graphType',
            'name': 'name',
            'id': 'id',
            'category': 'category'
        }

        self._graph_type = graph_type
        self._name = name
        self._id = id
        self._category = category

    @classmethod
    def from_dict(cls, dikt) -> 'ChartViewMlStat':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChartView_mlStat of this ChartViewMlStat.  # noqa: E501
        :rtype: ChartViewMlStat
        """
        return util.deserialize_model(dikt, cls)

    @property
    def graph_type(self):
        """Gets the graph_type of this ChartViewMlStat.


        :return: The graph_type of this ChartViewMlStat.
        :rtype: str
        """
        return self._graph_type

    @graph_type.setter
    def graph_type(self, graph_type):
        """Sets the graph_type of this ChartViewMlStat.


        :param graph_type: The graph_type of this ChartViewMlStat.
        :type graph_type: str
        """

        self._graph_type = graph_type

    @property
    def name(self):
        """Gets the name of this ChartViewMlStat.


        :return: The name of this ChartViewMlStat.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ChartViewMlStat.


        :param name: The name of this ChartViewMlStat.
        :type name: str
        """

        self._name = name

    @property
    def id(self):
        """Gets the id of this ChartViewMlStat.


        :return: The id of this ChartViewMlStat.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChartViewMlStat.


        :param id: The id of this ChartViewMlStat.
        :type id: str
        """

        self._id = id

    @property
    def category(self):
        """Gets the category of this ChartViewMlStat.


        :return: The category of this ChartViewMlStat.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this ChartViewMlStat.


        :param category: The category of this ChartViewMlStat.
        :type category: str
        """

        self._category = category
