# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mcenter_server_api.models.base_model_ import Model
from mcenter_server_api import util


class Model(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approved_for_ions=None, cleared_timestamp=None, created=None, created_by=None, created_timestamp=None, deleted_timestamp=None, format=None, host=None, id=None, model_id=None, model_size=None, name=None, rejected_for_ions=None, reviewed_by=None, state=None, state_description=None):  # noqa: E501
        """Model - a model defined in OpenAPI

        :param approved_for_ions: The approved_for_ions of this Model.  # noqa: E501
        :type approved_for_ions: List[str]
        :param cleared_timestamp: The cleared_timestamp of this Model.  # noqa: E501
        :type cleared_timestamp: int
        :param created: The created of this Model.  # noqa: E501
        :type created: int
        :param created_by: The created_by of this Model.  # noqa: E501
        :type created_by: str
        :param created_timestamp: The created_timestamp of this Model.  # noqa: E501
        :type created_timestamp: int
        :param deleted_timestamp: The deleted_timestamp of this Model.  # noqa: E501
        :type deleted_timestamp: int
        :param format: The format of this Model.  # noqa: E501
        :type format: str
        :param host: The host of this Model.  # noqa: E501
        :type host: str
        :param id: The id of this Model.  # noqa: E501
        :type id: str
        :param model_id: The model_id of this Model.  # noqa: E501
        :type model_id: str
        :param model_size: The model_size of this Model.  # noqa: E501
        :type model_size: int
        :param name: The name of this Model.  # noqa: E501
        :type name: str
        :param rejected_for_ions: The rejected_for_ions of this Model.  # noqa: E501
        :type rejected_for_ions: List[str]
        :param reviewed_by: The reviewed_by of this Model.  # noqa: E501
        :type reviewed_by: str
        :param state: The state of this Model.  # noqa: E501
        :type state: str
        :param state_description: The state_description of this Model.  # noqa: E501
        :type state_description: str
        """
        self.openapi_types = {
            'approved_for_ions': 'List[str]',
            'cleared_timestamp': 'int',
            'created': 'int',
            'created_by': 'str',
            'created_timestamp': 'int',
            'deleted_timestamp': 'int',
            'format': 'str',
            'host': 'str',
            'id': 'str',
            'model_id': 'str',
            'model_size': 'int',
            'name': 'str',
            'rejected_for_ions': 'List[str]',
            'reviewed_by': 'str',
            'state': 'str',
            'state_description': 'str'
        }

        self.attribute_map = {
            'approved_for_ions': 'approvedForIons',
            'cleared_timestamp': 'clearedTimestamp',
            'created': 'created',
            'created_by': 'createdBy',
            'created_timestamp': 'createdTimestamp',
            'deleted_timestamp': 'deletedTimestamp',
            'format': 'format',
            'host': 'host',
            'id': 'id',
            'model_id': 'modelId',
            'model_size': 'modelSize',
            'name': 'name',
            'rejected_for_ions': 'rejectedForIons',
            'reviewed_by': 'reviewedBy',
            'state': 'state',
            'state_description': 'stateDescription'
        }

        self._approved_for_ions = approved_for_ions
        self._cleared_timestamp = cleared_timestamp
        self._created = created
        self._created_by = created_by
        self._created_timestamp = created_timestamp
        self._deleted_timestamp = deleted_timestamp
        self._format = format
        self._host = host
        self._id = id
        self._model_id = model_id
        self._model_size = model_size
        self._name = name
        self._rejected_for_ions = rejected_for_ions
        self._reviewed_by = reviewed_by
        self._state = state
        self._state_description = state_description

    @classmethod
    def from_dict(cls, dikt) -> 'Model':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Model of this Model.  # noqa: E501
        :rtype: Model
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approved_for_ions(self):
        """Gets the approved_for_ions of this Model.


        :return: The approved_for_ions of this Model.
        :rtype: List[str]
        """
        return self._approved_for_ions

    @approved_for_ions.setter
    def approved_for_ions(self, approved_for_ions):
        """Sets the approved_for_ions of this Model.


        :param approved_for_ions: The approved_for_ions of this Model.
        :type approved_for_ions: List[str]
        """

        self._approved_for_ions = approved_for_ions

    @property
    def cleared_timestamp(self):
        """Gets the cleared_timestamp of this Model.


        :return: The cleared_timestamp of this Model.
        :rtype: int
        """
        return self._cleared_timestamp

    @cleared_timestamp.setter
    def cleared_timestamp(self, cleared_timestamp):
        """Sets the cleared_timestamp of this Model.


        :param cleared_timestamp: The cleared_timestamp of this Model.
        :type cleared_timestamp: int
        """

        self._cleared_timestamp = cleared_timestamp

    @property
    def created(self):
        """Gets the created of this Model.


        :return: The created of this Model.
        :rtype: int
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Model.


        :param created: The created of this Model.
        :type created: int
        """
        if created is not None and created < 0:  # noqa: E501
            raise ValueError("Invalid value for `created`, must be a value greater than or equal to `0`")  # noqa: E501

        self._created = created

    @property
    def created_by(self):
        """Gets the created_by of this Model.


        :return: The created_by of this Model.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Model.


        :param created_by: The created_by of this Model.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this Model.


        :return: The created_timestamp of this Model.
        :rtype: int
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this Model.


        :param created_timestamp: The created_timestamp of this Model.
        :type created_timestamp: int
        """

        self._created_timestamp = created_timestamp

    @property
    def deleted_timestamp(self):
        """Gets the deleted_timestamp of this Model.


        :return: The deleted_timestamp of this Model.
        :rtype: int
        """
        return self._deleted_timestamp

    @deleted_timestamp.setter
    def deleted_timestamp(self, deleted_timestamp):
        """Sets the deleted_timestamp of this Model.


        :param deleted_timestamp: The deleted_timestamp of this Model.
        :type deleted_timestamp: int
        """

        self._deleted_timestamp = deleted_timestamp

    @property
    def format(self):
        """Gets the format of this Model.


        :return: The format of this Model.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this Model.


        :param format: The format of this Model.
        :type format: str
        """

        self._format = format

    @property
    def host(self):
        """Gets the host of this Model.


        :return: The host of this Model.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this Model.


        :param host: The host of this Model.
        :type host: str
        """

        self._host = host

    @property
    def id(self):
        """Gets the id of this Model.


        :return: The id of this Model.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Model.


        :param id: The id of this Model.
        :type id: str
        """

        self._id = id

    @property
    def model_id(self):
        """Gets the model_id of this Model.


        :return: The model_id of this Model.
        :rtype: str
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id):
        """Sets the model_id of this Model.


        :param model_id: The model_id of this Model.
        :type model_id: str
        """

        self._model_id = model_id

    @property
    def model_size(self):
        """Gets the model_size of this Model.


        :return: The model_size of this Model.
        :rtype: int
        """
        return self._model_size

    @model_size.setter
    def model_size(self, model_size):
        """Sets the model_size of this Model.


        :param model_size: The model_size of this Model.
        :type model_size: int
        """

        self._model_size = model_size

    @property
    def name(self):
        """Gets the name of this Model.


        :return: The name of this Model.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Model.


        :param name: The name of this Model.
        :type name: str
        """

        self._name = name

    @property
    def rejected_for_ions(self):
        """Gets the rejected_for_ions of this Model.


        :return: The rejected_for_ions of this Model.
        :rtype: List[str]
        """
        return self._rejected_for_ions

    @rejected_for_ions.setter
    def rejected_for_ions(self, rejected_for_ions):
        """Sets the rejected_for_ions of this Model.


        :param rejected_for_ions: The rejected_for_ions of this Model.
        :type rejected_for_ions: List[str]
        """

        self._rejected_for_ions = rejected_for_ions

    @property
    def reviewed_by(self):
        """Gets the reviewed_by of this Model.


        :return: The reviewed_by of this Model.
        :rtype: str
        """
        return self._reviewed_by

    @reviewed_by.setter
    def reviewed_by(self, reviewed_by):
        """Sets the reviewed_by of this Model.


        :param reviewed_by: The reviewed_by of this Model.
        :type reviewed_by: str
        """

        self._reviewed_by = reviewed_by

    @property
    def state(self):
        """Gets the state of this Model.


        :return: The state of this Model.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Model.


        :param state: The state of this Model.
        :type state: str
        """

        self._state = state

    @property
    def state_description(self):
        """Gets the state_description of this Model.


        :return: The state_description of this Model.
        :rtype: str
        """
        return self._state_description

    @state_description.setter
    def state_description(self, state_description):
        """Sets the state_description of this Model.


        :param state_description: The state_description of this Model.
        :type state_description: str
        """

        self._state_description = state_description
