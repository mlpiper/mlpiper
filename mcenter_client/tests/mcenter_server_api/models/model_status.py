# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mcenter_server_api.models.base_model_ import Model
from mcenter_server_api import util


class ModelStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approval_details=None, model_id=None, rejection_details=None, user=None):  # noqa: E501
        """ModelStatus - a model defined in OpenAPI

        :param approval_details: The approval_details of this ModelStatus.  # noqa: E501
        :type approval_details: List[object]
        :param model_id: The model_id of this ModelStatus.  # noqa: E501
        :type model_id: str
        :param rejection_details: The rejection_details of this ModelStatus.  # noqa: E501
        :type rejection_details: List[object]
        :param user: The user of this ModelStatus.  # noqa: E501
        :type user: str
        """
        self.openapi_types = {
            'approval_details': 'List[object]',
            'model_id': 'str',
            'rejection_details': 'List[object]',
            'user': 'str'
        }

        self.attribute_map = {
            'approval_details': 'approvalDetails',
            'model_id': 'modelId',
            'rejection_details': 'rejectionDetails',
            'user': 'user'
        }

        self._approval_details = approval_details
        self._model_id = model_id
        self._rejection_details = rejection_details
        self._user = user

    @classmethod
    def from_dict(cls, dikt) -> 'ModelStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ModelStatus of this ModelStatus.  # noqa: E501
        :rtype: ModelStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approval_details(self):
        """Gets the approval_details of this ModelStatus.


        :return: The approval_details of this ModelStatus.
        :rtype: List[object]
        """
        return self._approval_details

    @approval_details.setter
    def approval_details(self, approval_details):
        """Sets the approval_details of this ModelStatus.


        :param approval_details: The approval_details of this ModelStatus.
        :type approval_details: List[object]
        """

        self._approval_details = approval_details

    @property
    def model_id(self):
        """Gets the model_id of this ModelStatus.


        :return: The model_id of this ModelStatus.
        :rtype: str
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id):
        """Sets the model_id of this ModelStatus.


        :param model_id: The model_id of this ModelStatus.
        :type model_id: str
        """

        self._model_id = model_id

    @property
    def rejection_details(self):
        """Gets the rejection_details of this ModelStatus.


        :return: The rejection_details of this ModelStatus.
        :rtype: List[object]
        """
        return self._rejection_details

    @rejection_details.setter
    def rejection_details(self, rejection_details):
        """Sets the rejection_details of this ModelStatus.


        :param rejection_details: The rejection_details of this ModelStatus.
        :type rejection_details: List[object]
        """

        self._rejection_details = rejection_details

    @property
    def user(self):
        """Gets the user of this ModelStatus.


        :return: The user of this ModelStatus.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this ModelStatus.


        :param user: The user of this ModelStatus.
        :type user: str
        """

        self._user = user
