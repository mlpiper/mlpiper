# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mcenter_server_api.models.base_model_ import Model
from mcenter_server_api import util


class DataViewIonStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_by=None, name=None, created_time=None, status=None):  # noqa: E501
        """DataViewIonStatus - a model defined in OpenAPI

        :param created_by: The created_by of this DataViewIonStatus.  # noqa: E501
        :type created_by: str
        :param name: The name of this DataViewIonStatus.  # noqa: E501
        :type name: str
        :param created_time: The created_time of this DataViewIonStatus.  # noqa: E501
        :type created_time: int
        :param status: The status of this DataViewIonStatus.  # noqa: E501
        :type status: str
        """
        self.openapi_types = {
            'created_by': 'str',
            'name': 'str',
            'created_time': 'int',
            'status': 'str'
        }

        self.attribute_map = {
            'created_by': 'createdBy',
            'name': 'name',
            'created_time': 'createdTime',
            'status': 'status'
        }

        self._created_by = created_by
        self._name = name
        self._created_time = created_time
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'DataViewIonStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DataView_ion_status of this DataViewIonStatus.  # noqa: E501
        :rtype: DataViewIonStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_by(self):
        """Gets the created_by of this DataViewIonStatus.


        :return: The created_by of this DataViewIonStatus.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this DataViewIonStatus.


        :param created_by: The created_by of this DataViewIonStatus.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def name(self):
        """Gets the name of this DataViewIonStatus.


        :return: The name of this DataViewIonStatus.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DataViewIonStatus.


        :param name: The name of this DataViewIonStatus.
        :type name: str
        """

        self._name = name

    @property
    def created_time(self):
        """Gets the created_time of this DataViewIonStatus.


        :return: The created_time of this DataViewIonStatus.
        :rtype: int
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this DataViewIonStatus.


        :param created_time: The created_time of this DataViewIonStatus.
        :type created_time: int
        """

        self._created_time = created_time

    @property
    def status(self):
        """Gets the status of this DataViewIonStatus.


        :return: The status of this DataViewIonStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DataViewIonStatus.


        :param status: The status of this DataViewIonStatus.
        :type status: str
        """

        self._status = status
